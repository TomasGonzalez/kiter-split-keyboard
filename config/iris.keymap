/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        td_0: td_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_0";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_ALT>,
                <&sk LEFT_ALT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     		  | GUI  | LOWER|  SPACE |  | ENTER | RAISE|  ALT  |

            bindings = <
 &trans  &trans  &trans            &trans  &trans          &trans                                         &trans  &trans     &trans   &trans    &trans                 &trans
&kp TAB   &kp Q   &kp W             &kp E   &kp R           &kp T                                          &kp Y   &kp U      &kp I    &kp O     &kp P          &kp BACKSPACE
&kp ESC   &kp A   &kp S             &kp D   &kp F           &kp G                                          &kp H   &kp J      &kp K    &kp L  &kp SEMI                &kp SQT
  &td_0   &kp Z   &kp X             &kp C   &kp V           &kp B      &mo 3  &mo 2                        &kp N   &kp M  &kp COMMA  &kp DOT  &kp FSLH  &mt RIGHT_SHIFT ENTER
                         &kp LEFT_CONTROL   &mo 1  &kp LEFT_SHIFT  &kp SPACE  &mo 2  &mt RIGHT_COMMAND LG(SPACE)
            >;
        };

        special_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                            |      |      |        |  |       |      |       |

            bindings = <
   &trans      &trans      &trans      &trans  &trans          &trans                                        &trans    &trans     &trans     &trans            &trans                 &trans
&kp GRAVE      &kp N1      &kp N2      &kp N3  &kp N4          &kp N5                                        &kp N6    &kp N7     &kp N8     &kp N9            &kp N0          &kp BACKSPACE
 &kp CAPS      &trans      &trans      &trans  &trans          &trans                                      &kp LEFT  &kp DOWN     &kp UP  &kp RIGHT  &kp LEFT_BRACKET      &kp RIGHT_BRACKET
   &trans  &kp C_MUTE  &kp C_PREV  &kp C_NEXT  &trans          &trans  &trans             &trans             &trans    &trans  &kp MINUS  &kp EQUAL     &kp BACKSLASH  &mt RIGHT_SHIFT ENTER
                                       &trans  &trans  &kp LEFT_SHIFT   &mo 4  &kp RIGHT_CONTROL  &kp RIGHT_COMMAND
            >;
        };

        pc_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   ^   |  v   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                            |      |      |        |  |       |      |       |

            bindings = <
   &trans           &trans             &trans            &trans            &trans           &trans                             &trans         &trans          &trans                &trans                 &trans                 &trans
&kp TILDE  &kp EXCLAMATION             &kp AT          &kp HASH        &kp DOLLAR      &kp PERCENT                          &kp CARET  &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                 &trans
   &trans           &trans      &kp RA(RG(X))     &kp RA(RG(C))            &trans    &kp RA(RG(G))                           &kp LEFT       &kp DOWN          &kp UP             &kp RIGHT         &kp LEFT_BRACE        &kp RIGHT_BRACE
   &trans         &kp C_PP  &kp C_VOLUME_DOWN      &kp C_VOL_UP            &trans           &trans  &trans  &trans             &trans         &trans  &kp UNDERSCORE              &kp PLUS               &kp PIPE  &mt RIGHT_SHIFT ENTER
                                               &kp LEFT_CONTROL  &kp LEFT_COMMAND  &kp RIGHT_SHIFT  &trans  &trans  &kp RIGHT_COMMAND
            >;
        };

        keyboard_control {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3       &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans                      &trans        &trans        &trans        &trans        &trans             &trans
&trans  &trans  &trans  &trans  &trans  &trans                      &trans        &trans        &trans        &trans        &trans   &ext_power EP_ON
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans        &trans        &trans        &trans        &reset  &ext_power EP_OFF
                        &trans  &trans  &trans  &trans  &trans      &trans
            >;
        };

        Layer__4 {
            bindings = <
    &trans        &trans        &trans        &trans        &trans        &trans                  &trans  &trans  &trans  &trans   &trans   &trans
   &kp F12        &kp F1        &kp F2        &kp F3        &kp F4        &kp F5                  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &trans  &trans  &trans  &trans   &trans   &trans
    &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans   &trans
                                              &trans        &trans        &trans  &trans  &trans  &trans
            >;
        };
    };
};
